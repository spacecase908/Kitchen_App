CREATE TABLE app_user (user_id SERIAL PRIMARY KEY, user_Name VARCHAR(50), Caloric_Needs int, Gluten_Sensitivity bool, Allergies VARCHAR(25), Vegan_Vegetarian VARCHAR(11), Spice_Tolerance VARCHAR(25));
CREATE TABLE Meal_Plan (plan_ID SERIAL PRIMARY KEY, plan_Name VARCHAR(25) not null, Number_of_Meals int not null, calories_per_day int, Diet_Style VARCHAR(25), Complexity VARCHAR(25), Description TEXT, Creator_ID SERIAL, FOREIGN KEY (Creator_ID) REFERENCES app_user(user_ID));
CREATE TABLE Storage (sto_ID SERIAL PRIMARY KEY, sto_Name VARCHAR(25) not null, Location VARCHAR(25), Type VARCHAR(25), Temperature VARCHAR(25), Capacity int not null, Light_Exposure VARCHAR(25));
CREATE TABLE Recipe	(rec_ID SERIAL PRIMARY KEY, rec_Name VARCHAR(900) not null, Author VARCHAR(100), Source VARCHAR(100) not null, URL TEXT, Cuisine VARCHAR(150), Time_to_Cook int, Calories int, Complexity VARCHAR(25), Type VARCHAR(15), Vegetarian_Status VARCHAR(25), Spiciness VARCHAR(25));
CREATE TABLE Ingredient (ing_ID SERIAL PRIMARY KEY, ing_Name VARCHAR(100), Quantity float8 not null, Type VARCHAR(25), Family VARCHAR(25), Color VARCHAR(25), Price_per_Unit float8, Unit VARCHAR(11), Organic bool, Date_Purchased date, Expiration_Date date not null, Location_Purchased VARCHAR(25), Season VARCHAR(25), Quality VARCHAR, Storage_ID SERIAL, FOREIGN KEY (Storage_ID) REFERENCES Storage(sto_ID));
CREATE TABLE Equipment (eqp_ID SERIAL PRIMARY KEY, eqp_Name VARCHAR(25) not null, Type VARCHAR(25), Brand  VARCHAR(25), Size VARCHAR(25), Material VARCHAR(25), Age int, Owner VARCHAR(15), Storage_ID SERIAL, FOREIGN KEY (Storage_ID) REFERENCES Storage(sto_ID));
CREATE TABLE Appliance (app_ID SERIAL PRIMARY KEY, app_Name VARCHAR(25) not null, Function VARCHAR(25), Manufacturer VARCHAR(25), Year date, Maintenance_Status VARCHAR(25));
CREATE TABLE Shopping_List (list_ID SERIAL PRIMARY KEY, Date date, Store VARCHAR(25), Purchaser_ID SERIAL, FOREIGN KEY (Purchaser_ID) REFERENCES app_user(user_ID));
CREATE TABLE Favorites (user_ID SERIAL PRIMARY KEY REFERENCES app_user(user_ID), Rec_ID SERIAL REFERENCES Recipe(rec_ID)ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE Has_Cooked (hc_ID SERIAL PRIMARY KEY, user_ID SERIAL REFERENCES app_user(user_ID), Rec_ID SERIAL REFERENCES Recipe(rec_ID) ON UPDATE CASCADE ON DELETE CASCADE, Rating int, Times_Cooked int);
CREATE TABLE Plan_contains (pc_ID SERIAL PRIMARY KEY, Plan_ID SERIAL  REFERENCES Meal_Plan(plan_ID), Rec_ID  SERIAL REFERENCES Recipe(rec_ID) ON UPDATE CASCADE ON DELETE CASCADE, Servings int);
CREATE TABLE List_to_Make (lm_ID SERIAL PRIMARY KEY, list_ID SERIAL REFERENCES Shopping_List(list_ID), Rec_ID SERIAL REFERENCES Recipe(rec_ID) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE ing_required (ir_ID SERIAL PRIMARY KEY, rec_ID SERIAL REFERENCES Recipe(rec_ID) ON UPDATE CASCADE ON DELETE CASCADE, ing_id SERIAL REFERENCES Ingredient(ing_ID), qty float8);
CREATE TABLE list_contains (lc_ID SERIAL PRIMARY KEY, list_ID SERIAL REFERENCES Shopping_List(list_ID), ing_id SERIAL REFERENCES Ingredient(ing_ID), qty float8);
CREATE TABLE app_required (ar_ID SERIAL PRIMARY KEY, rec_ID SERIAL REFERENCES Recipe(rec_ID) ON UPDATE CASCADE ON DELETE CASCADE, app_ID SERIAL REFERENCES Appliance(app_ID), Used_for VARCHAR(25));
CREATE TABLE eqp_required (er_ID SERIAL PRIMARY KEY, rec_ID SERIAL REFERENCES Recipe(rec_ID) ON UPDATE CASCADE ON DELETE CASCADE, eqp_ID SERIAL REFERENCES Equipment(eqp_ID), Used_for VARCHAR(25));